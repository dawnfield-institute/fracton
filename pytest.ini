# Fracton Test Configuration
# pytest configuration and test collection settings

[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test markers for categorization
markers =
    sec_compliance: tests for SEC (Symbolic Entropy Collapse) compliance
    med_compliance: tests for MED (Macro Emergence Dynamics) compliance
    bifractal_symmetry: tests for bifractal temporal symmetry
    recursive_balance: tests for recursive balance field principles
    performance: performance benchmarks and scaling tests
    integration: integration tests across components
    foundational_theory: tests validating foundational Dawn Field Theory principles

# Test discovery and execution settings
addopts = 
    --strict-markers
    --tb=short
    --maxfail=5
    -v

# Coverage settings
[coverage:run]
source = fracton
omit = 
    */tests/*
    */test_*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Performance test timeouts (in seconds)
timeout = 300

# Minimum code coverage percentage
fail_under = 85
